version: '2.4'

networks:
  default:
    external:
      name: ${NETWORK}

services:
  transmission:
    image: lscr.io/linuxserver/transmission
    environment:
    - TZ=${TIMEZONE}
    - PGID=0
    - PUID=0
    volumes:
    - ${DIR_DOWNLOADS}:/downloads
    - ${DIR_CONFIG}/transmission/config:/config
    logging:
      driver: json-file
      options:
        max-size: "1m"
    labels:
      traefik.enable: true
      traefik.http.routers.transmission.rule: Host(`transmission.${DOMAIN}`)
      traefik.http.services.transmission.loadbalancer.server.port: 80

#  plex:
#    image: plexinc/pms-docker
#    restart: unless-stopped
#    environment:
#    - VERSION=latest
#    - PUID=0
#    - PGID=0
#    - TZ=${TIMEZONE}
#    - PLEX_CLAIM=${PLEX_CLAIM}
#    - PLEX_UID=0
#    - PLEX_GID=0
#    - ADVERTISE_IP=http://${IP_PLEX}:32400
#    volumes:
#    - /etc/localtime:/etc/localtime:ro
#    - ${DIR_CONFIG}/plex/config:/config
#    - ${DIR_FILMS}:/data/movies:ro
#    - ${DIR_SERIES}:/data/tvshows:ro
#    #- ${DIR_MUSIC}:/data/music:ro
#    - ${DIR_SPORTS}:/data/sports:ro
#    logging:
#      driver: json-file
#      options:
#        max-size: "1m"

  jackett:
    image: lscr.io/linuxserver/jackett
    restart: unless-stopped
    environment:
    - TZ=${TIMEZONE}
    - PUID=0
    - PGID=0
    volumes:
    - ${DIR_CONFIG}/jackett/config:/config
    - ${DIR_DOWNLOADS}:/downloads
    logging:
      driver: json-file
      options:
        max-size: "1m"
    labels:
      traefik.enable: true
      traefik.http.routers.jackett.rule: Host(`jackett.${DOMAIN}`)
      traefik.http.services.jackett.loadbalancer.server.port: 80

  sonarr:
    image: lscr.io/linuxserver/sonarr
    restart: unless-stopped
    environment:
    - TZ=${TIMEZONE}
    - PUID=0
    - PGID=0
    volumes:
    - ${DIR_CONFIG}/sonarr/config:/config
    - ${DIR_SERIES}:/tv
    - ${DIR_DOWNLOADS}:/downloads
    logging:
      driver: json-file
      options:
        max-size: "1m"
    labels:
      traefik.enable: true
      traefik.http.routers.sonarr.rule: Host(`sonarr.${DOMAIN}`)
      traefik.http.services.sonarr.loadbalancer.server.port: 80

  radarr:
    image: lscr.io/linuxserver/radarr
    restart: unless-stopped
    environment:
    - TZ=${TIMEZONE}
    - PUID=0
    - PGID=0
    volumes:
    - ${DIR_CONFIG}/radarr/config:/config
    - ${DIR_FILMS}:/movies
    - ${DIR_SPORTS}:/sports
    - ${DIR_DOWNLOADS}:/downloads
    logging:
      driver: json-file
      options:
        max-size: "1m"
    labels:
      traefik.enable: true
      traefik.http.routers.radarr.rule: Host(`radarr.${DOMAIN}`)
      traefik.http.services.radarr.loadbalancer.server.port: 80

  bazarr:
    image: lscr.io/linuxserver/bazarr
    restart: unless-stopped
    environment:
    - TZ=${TIMEZONE}
    - PUID=0
    - PGID=0
    volumes:
    - ${DIR_CONFIG}/bazarr/config:/config
    - ${DIR_FILMS}:/movies
    - ${DIR_SERIES}:/tv
    logging:
      driver: json-file
      options:
        max-size: "1m"
    labels:
      traefik.enable: true
      traefik.http.routers.bazarr.rule: Host(`bazarr.${DOMAIN}`)
      traefik.http.services.bazarr.loadbalancer.server.port: 80

  podgrab:
    image: akhilrex/podgrab
    restart: unless-stopped
    environment:
      CHECK_FREQUENCY: 240
    volumes:
    - ${DIR_CONFIG}/podgrab/config:/config
    - ${DIR_PODCASTS}:/assets
    logging:
      driver: json-file
      options:
        max-size: "1m"
    labels:
      traefik.enable: true
      traefik.http.routers.podgrab.rule: Host(`podgrab.${DOMAIN}`)
      traefik.http.services.podgrab.loadbalancer.server.port: 8080

  jellyfin:
    image: jellyfin/jellyfin:latest
    environment:
      JELLYFIN_PublishedServerUrl: ${URL_JELLYFIN}
    volumes:
      - ${DIR_CONFIG}/jellyfin/config:/config
      - ${DIR_CONFIG}/jellyfin/cache:/cache
      - ${DIR_MUSIC}:/media/music:ro
      - ${DIR_PODCASTS}:/media/podcasts:ro
      - ${DIR_FILMS}:/media/movies:ro
      - ${DIR_SERIES}:/media/tvshows:ro
      - ${DIR_SPORTS}:/media/sports:ro
    devices:
      - /dev/dri:/dev/dri
    logging:
      driver: json-file
      options:
        max-size: "1m"
    labels:
      traefik.enable: true
      traefik.http.routers.jellyfin.rule: Host(`jellyfin.${DOMAIN}`)
      traefik.http.services.jellyfin.loadbalancer.server.port: 80
