version: "2"

services:
  gitea:
    image: gitea/gitea:1
    restart: unless-stopped
    volumes:
      - ${DIR_CODE}/gitea/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${PORT_GITEA}:3000

  drone:
    image: drone/drone:1
    restart: unless-stopped
    volumes:
      - ${DIR_CODE}/drone/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${PORT_CODE}:80
    environment:
      DRONE_GITEA_SERVER: ${ENV_DRONE_GITEA_SERVER}
      DRONE_GITEA_CLIENT_ID: ${ENV_DRONE_GITEA_CLIENT_ID}
      DRONE_GITEA_CLIENT_SECRET: ${ENV_DRONE_GITEA_CLIENT_SECRET}
      DRONE_GIT_USERNAME: ${ENV_DRONE_GIT_USERNAME}
      DRONE_GIT_PASSWORD: ${ENV_DRONE_GIT_PASSWORD}
      DRONE_GIT_ALWAYS_AUTH: ${ENV_DRONE_GIT_ALWAYS_AUTH}
      DRONE_RPC_SECRET: ${ENV_DRONE_RPC_SECRET}
      DRONE_SERVER_HOST: ${ENV_DRONE_SERVER_HOST}
      DRONE_SERVER_PROTO: ${ENV_DRONE_SERVER_PROTO}

  drone_runner_docker:
    image: drone/drone-runner-docker:1
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${PORT_DRONE_RUNNER_DOCKER}:3000
    environment:
      DRONE_RPC_HOST: ${ENV_DRONE_SERVER_HOST}
      DRONE_RPC_PROTO: ${ENV_DRONE_SERVER_PROTO}
      DRONE_RPC_SECRET: ${ENV_DRONE_RPC_SECRET}
      DRONE_RUNNER_CAPACITY: ${ENV_DRONE_RUNNER_CAPACITY}
      DRONE_RUNNER_NAME: ${ENV_DRONE_RUNNER_NAME}
    
